=== join on an item using two belongs_to relationships
Request:
GET /cd/1?join=artist,genre
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_links" : {
      "artist" : {
         "href" : "/artist/1"
      },
      "cd_to_producer" : {
         "href" : "/cd_to_producer?me.cd=1"
      },
      "genre" : {
         "href" : "/genre/1"
      },
      "self" : {
         "href" : "/cd/1"
      },
      "tracks" : {
         "href" : "/track?me.cd=1"
      }
   },
   "artist" : 1,
   "cdid" : 1,
   "genreid" : 1,
   "single_track" : null,
   "title" : "Spoonful of bees",
   "year" : "1999"
}

=== join on a set using two belongs_to relationships
Request:
GET /cd?rows=2&page=1&join=artist,genre
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "cd" : [
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=1"
               },
               "genre" : {
                  "href" : "/genre/1"
               },
               "self" : {
                  "href" : "/cd/1"
               },
               "tracks" : {
                  "href" : "/track?me.cd=1"
               }
            },
            "artist" : 1,
            "cdid" : 1,
            "genreid" : 1,
            "single_track" : null,
            "title" : "Spoonful of bees",
            "year" : "1999"
         },
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=2"
               },
               "genre" : {
                  "href" : "/genre/2"
               },
               "self" : {
                  "href" : "/cd/2"
               },
               "tracks" : {
                  "href" : "/track?me.cd=2"
               }
            },
            "artist" : 1,
            "cdid" : 2,
            "genreid" : 2,
            "single_track" : null,
            "title" : "Forkful of bees",
            "year" : "2001"
         }
      ]
   },
   "_links" : {
      "next" : {
         "href" : "/cd?rows=2&page=2"
      },
      "self" : {
         "href" : "/cd?rows=2&page=1",
         "title" : "TestSchema::Result::CD"
      }
   }
}

=== filter on joined relation field
Request:
GET /cd?join=artist&artist.name=Random+Boy+Band
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "cd" : [
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/2"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=4"
               },
               "genre" : {
                  "href" : "/genre/3"
               },
               "self" : {
                  "href" : "/cd/4"
               },
               "tracks" : {
                  "href" : "/track?me.cd=4"
               }
            },
            "artist" : 2,
            "cdid" : 4,
            "genreid" : 3,
            "single_track" : null,
            "title" : "Generic Manufactured Singles",
            "year" : "2001"
         }
      ]
   },
   "_links" : {
      "self" : {
         "href" : "/cd?rows=30&page=1",
         "title" : "TestSchema::Result::CD"
      }
   }
}

=== filter on join with JSON
Request:
GET /cd?join=artist PARAMS: artist.name~json=>{"like"=>"%Band"}
GET /cd?join=artist&artist.name~json=%7B%22like%22%3A%22%25Band%22%7D
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "cd" : [
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/2"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=4"
               },
               "genre" : {
                  "href" : "/genre/3"
               },
               "self" : {
                  "href" : "/cd/4"
               },
               "tracks" : {
                  "href" : "/track?me.cd=4"
               }
            },
            "artist" : 2,
            "cdid" : 4,
            "genreid" : 3,
            "single_track" : null,
            "title" : "Generic Manufactured Singles",
            "year" : "2001"
         }
      ]
   },
   "_links" : {
      "self" : {
         "href" : "/cd?rows=30&page=1",
         "title" : "TestSchema::Result::CD"
      }
   }
}

=== multi type relation (has_many) in join on item
Request:
GET /artist/1?join=cds&order=cds.cdid
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_links" : {
      "cds" : {
         "href" : "/cd?me.artist=1"
      },
      "cds_cref_cond" : {
         "href" : "/cd/1"
      },
      "self" : {
         "href" : "/artist/1"
      }
   },
   "artistid" : 1,
   "charfield" : null,
   "name" : "Caterwauler McCrae",
   "rank" : 13
}

=== multi type relation (has_many) in join on set
Request:
GET /artist?join=cds&order=me.artistid,cds.cdid&rows=2
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "artist" : [
         {
            "_links" : {
               "cds" : {
                  "href" : "/cd?me.artist=1"
               },
               "cds_cref_cond" : {
                  "href" : "/cd/1"
               },
               "self" : {
                  "href" : "/artist/1"
               }
            },
            "artistid" : 1,
            "charfield" : null,
            "name" : "Caterwauler McCrae",
            "rank" : 13
         },
         {
            "_links" : {
               "cds" : {
                  "href" : "/cd?me.artist=2"
               },
               "cds_cref_cond" : {
                  "href" : "/cd/2"
               },
               "self" : {
                  "href" : "/artist/2"
               }
            },
            "artistid" : 2,
            "charfield" : null,
            "name" : "Random Boy Band",
            "rank" : 13
         }
      ]
   },
   "_links" : {
      "next" : {
         "href" : "/artist?rows=2&page=2"
      },
      "self" : {
         "href" : "/artist?rows=2&page=1",
         "title" : "TestSchema::Result::Artist"
      }
   }
}

=== multi type relation in join on item (many_to_many via JSON) ArrayRef Syntax
Request:
GET /cd/1?sort=cd_to_producer.producer PARAMS: join~json=>[{"cd_to_producer"=>"producer"}]
GET /cd/1?sort=cd_to_producer.producer&join~json=%5B%7B%22cd_to_producer%22%3A%22producer%22%7D%5D
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_links" : {
      "artist" : {
         "href" : "/artist/1"
      },
      "cd_to_producer" : {
         "href" : "/cd_to_producer?me.cd=1"
      },
      "genre" : {
         "href" : "/genre/1"
      },
      "self" : {
         "href" : "/cd/1"
      },
      "tracks" : {
         "href" : "/track?me.cd=1"
      }
   },
   "artist" : 1,
   "cdid" : 1,
   "genreid" : 1,
   "single_track" : null,
   "title" : "Spoonful of bees",
   "year" : "1999"
}

=== multi type relation in join on item (many_to_many via JSON) HashRef Syntax
Request:
GET /cd/1?sort=cd_to_producer.producer PARAMS: join~json=>{"cd_to_producer"=>"producer"}
GET /cd/1?sort=cd_to_producer.producer&join~json=%7B%22cd_to_producer%22%3A%22producer%22%7D
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_links" : {
      "artist" : {
         "href" : "/artist/1"
      },
      "cd_to_producer" : {
         "href" : "/cd_to_producer?me.cd=1"
      },
      "genre" : {
         "href" : "/genre/1"
      },
      "self" : {
         "href" : "/cd/1"
      },
      "tracks" : {
         "href" : "/track?me.cd=1"
      }
   },
   "artist" : 1,
   "cdid" : 1,
   "genreid" : 1,
   "single_track" : null,
   "title" : "Spoonful of bees",
   "year" : "1999"
}

=== filter on nested join
Request:
GET /artist?rows=2&producer.name=Matt+S+Trout PARAMS: join~json=>{"cds"=>{"cd_to_producer"=>"producer"}} cds.year~json=>{">","0996"}
GET /artist?rows=2&producer.name=Matt+S+Trout&join~json=%7B%22cds%22%3A%7B%22cd_to_producer%22%3A%22producer%22%7D%7D&cds.year~json=%7B%22%3E%22%3A%220996%22%7D
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "artist" : [
         {
            "_links" : {
               "cds" : {
                  "href" : "/cd?me.artist=1"
               },
               "cds_cref_cond" : {
                  "href" : "/cd/1"
               },
               "self" : {
                  "href" : "/artist/1"
               }
            },
            "artistid" : 1,
            "charfield" : null,
            "name" : "Caterwauler McCrae",
            "rank" : 13
         }
      ]
   },
   "_links" : {
      "self" : {
         "href" : "/artist?rows=2&page=1",
         "title" : "TestSchema::Result::Artist"
      }
   }
}

=== join with query on ambiguous field
Request:
GET /cd/?me.artist=1&join=artist
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "cd" : [
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=1"
               },
               "genre" : {
                  "href" : "/genre/1"
               },
               "self" : {
                  "href" : "/cd/1"
               },
               "tracks" : {
                  "href" : "/track?me.cd=1"
               }
            },
            "artist" : 1,
            "cdid" : 1,
            "genreid" : 1,
            "single_track" : null,
            "title" : "Spoonful of bees",
            "year" : "1999"
         },
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=2"
               },
               "genre" : {
                  "href" : "/genre/2"
               },
               "self" : {
                  "href" : "/cd/2"
               },
               "tracks" : {
                  "href" : "/track?me.cd=2"
               }
            },
            "artist" : 1,
            "cdid" : 2,
            "genreid" : 2,
            "single_track" : null,
            "title" : "Forkful of bees",
            "year" : "2001"
         },
         {
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=3"
               },
               "genre" : {
                  "href" : "/genre/2"
               },
               "self" : {
                  "href" : "/cd/3"
               },
               "tracks" : {
                  "href" : "/track?me.cd=3"
               }
            },
            "artist" : 1,
            "cdid" : 3,
            "genreid" : 2,
            "single_track" : null,
            "title" : "Caterwaulin' Blues",
            "year" : "1997"
         }
      ]
   },
   "_links" : {
      "self" : {
         "href" : "/cd?rows=30&me.artist=1&page=1",
         "title" : "TestSchema::Result::CD"
      }
   }
}

=== join on invalid name
Request:
GET /cd/1?join=nonesuch
Accept: application/hal+json,application/json
Response:
400 Bad Request
Content-type: application/json
{
   "errors" : [
      {
         "_meta" : {
            "relationship" : null,
            "relationships" : [
               "artist",
               "cd_to_producer",
               "existing_single_track",
               "genre",
               "single_track",
               "tracks"
            ]
         },
         "nonesuch" : "no relationship with that name\n"
      }
   ]
}

=== join on set with partial response of joined items
Request:
GET /cd?rows=2&page=1&join=artist,genre&fields=cdid,artist,genreid,genre.genreid,artist.artistid
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "cd" : [
         {
            "_embedded" : {
               "artist" : {
                  "artistid" : 1
               },
               "genre" : {
                  "genreid" : 1
               }
            },
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=1"
               },
               "genre" : {
                  "href" : "/genre/1"
               },
               "self" : {
                  "href" : "/cd/1"
               },
               "tracks" : {
                  "href" : "/track?me.cd=1"
               }
            },
            "artist" : 1,
            "cdid" : 1,
            "genreid" : 1
         },
         {
            "_embedded" : {
               "artist" : {
                  "artistid" : 1
               },
               "genre" : {
                  "genreid" : 2
               }
            },
            "_links" : {
               "artist" : {
                  "href" : "/artist/1"
               },
               "cd_to_producer" : {
                  "href" : "/cd_to_producer?me.cd=2"
               },
               "genre" : {
                  "href" : "/genre/2"
               },
               "self" : {
                  "href" : "/cd/2"
               },
               "tracks" : {
                  "href" : "/track?me.cd=2"
               }
            },
            "artist" : 1,
            "cdid" : 2,
            "genreid" : 2
         }
      ]
   },
   "_links" : {
      "next" : {
         "href" : "/cd?rows=2&page=2"
      },
      "self" : {
         "href" : "/cd?rows=2&page=1",
         "title" : "TestSchema::Result::CD"
      }
   }
}

=== join on item with partial response of joined item
Request:
GET /cd/1?join=artist,genre&fields=cdid,artist,genreid,artist.artistid,genre.genreid
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_embedded" : {
      "artist" : {
         "artistid" : 1
      },
      "genre" : {
         "genreid" : 1
      }
   },
   "_links" : {
      "artist" : {
         "href" : "/artist/1"
      },
      "cd_to_producer" : {
         "href" : "/cd_to_producer?me.cd=1"
      },
      "genre" : {
         "href" : "/genre/1"
      },
      "self" : {
         "href" : "/cd/1"
      },
      "tracks" : {
         "href" : "/track?me.cd=1"
      }
   },
   "artist" : 1,
   "cdid" : 1,
   "genreid" : 1
}

=== join on item with id primary key #28
Request:
GET /country/1?join=cities
Accept: application/hal+json,application/json
Response:
200 OK
Content-type: application/hal+json
{
   "_links" : {
      "cities" : {
         "href" : "/city?me.country_id=1"
      },
      "self" : {
         "href" : "/country/1"
      }
   },
   "id" : 1,
   "name" : "England"
}

